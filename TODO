$Id$

Structure
---------
 - output_t should be a polymorphic base class; subclasses should be defined
   for the different output modes.
Pub
---
 - has to take multiple files, and with recursion. that way, we can take
   advantage of the cache -- otherwise, we can write a cache out to
   memory or disk?

Style / Readability
--------------------
- Clean up pfile_ , p_ , and xpub_ prefix zoo.  We can fix this.
- Figure out what's a section, and what's an element.
- Maybe make a better break between objects, elements and sections in XDR.

Memory
------
- Garbage collection -- when to clean up files and PFIDs -- especially
  after a pushed update.
- Init on load, or on use?  We can spawn external app to do it...

HTTP Issues
-----------
 - either #define OK_SERVER_ID, or use okdname/version but not both,
   as we're doing now...
 - multiple instances of each process on a SMP.  we'll also need something
   along the lines of an client cache, that map each client to the same
   server across multiple connections -- can be done with SHA1 hash
   of client address and port number
 - whitespace stripping in embedded C++ is a bit off
 - maximum number of clients served by okc_t object
 - LRU garbage collection on the proxy and the pub server
 - better autconf for mysqlclient and -lz.
 - factor out TODO list
 - autoconf pth system-call-hard insert; why no compile without?
 - while ((myrow_t r = sth->fetchrow ())) {
      str s = (*r)[0];
      int i = (*r)[1];
   }
 - ok children should request pub information -- maybe up rclient init?
 - ct_include evaluation of variables is broken. also, jailed files
   aren't handled properly.
 - autoconf anonymous web user, and check for oku
 - more accurate access (X_OK) check on startup (seteuid if root...)
 - kill everything nicely if the logd dies.  if the pubd dies, just cannot
   update templates. make lots of noise
 - strange service restart problems -- due to browser?
 - profile and optimize 
 - okmgr restart has buggy error messages;
 - combine svq and holdtab in an awesome way
 - better error messages / more robust okmgr repub stuff
 - Autoconf for zstr stuff
 - Document (1) debugging (2) library stuff
 - earlier duplicate okd check based on pid file.-- at least make sure
   pid file isn't hosed as a result
 - make a fast string class, that doesn't need to be parsed or put back
   together.  this will speed up pvar_t::output. 
 - watch out for zombie processes

BUGS
----
 - timestamp in log /  timezone
 - fine tune the amount of memory allocation given to CGI parsing;
   it should be within a small buffer for average case, and perhaps
   in bad case, it can grow to a dynamically allocated region, that
   is eventually put back on a free list. of course, we need to watch
   out for DOS possibilities here.
 - template iterators....
 - if the pubd is still churning when a request comes in, i don't
   think that request is ever serviced (on startup).

TODO
----
 - fix bug in nested include statements in config files.
 - implement authorization codes for the RPC-db protocol.
 - services should fail if their templates are not available.
 - mem leak in pt1 -- still; weird.
 - test with more than 1024 FDs.
 - better yet, all we'd have to do is have specific caching flags enabled
   in OKWS at pub-time.  then we'd cache things by their static pointers.
   i'm not thrilled with this idea, as we might have a small strbuf compiled
   into a zstr that is similar across all users.

Security
--------
 - check that config is owned by root, mode 0644
 - check that okws uids are not in use by anything else.
 - DOS attacks on okd -- slow data trickle.  should not block on demux?
   also need to think about error case.

OKD v0.2
--------
 - tweak okmgr -- get "all" feature to work
 - add better auth token support for DBs
 - enforce that jail directory and parents is not writable by any one but
   root -- that way compromised webserv can't put files there.
 - jail directory problems for oklogd -- use jailable_t -- also, need
   to copy over /etc/resolv.conf -- is this secure?
 - callback hooks for updating config files
 - testing when an RPC hangs, what the user sees.
 - statistics?  might be useful.  as in, number of current clients,
   and how long they've been active for.
 - packet buffer overrun in logging when there are lots of errors
   all at once.
 - if we get Message too big error on read in ahttpcon_listen, then
   just ignore and keep going. it means that our web server has too
   many file descriptors open. perhaps have a messenging system
   to tell okd to stop sending requests in this case.
 - bugs: RPC too big crashes whatever is running it; outstanding issues:
   first of all, why was the coredump not in the jailed /var/coredumps?
   second issue, why did this happen?  i thought all sockets were set 
   with a 4M socketsize? maybe it's a UDP restriction.
 - clean up recyling code.
 - runtime prepare checks.
 - aut tok's
 - uid is hacked into logging system ; de-hack it
 - (display post-gzip size content)
 - config file recursive decent?
 - write / test with slow-drip client
 - fix config 
 - benjie reports no dice when receiving big file uploads -- maybe
   we're hitting the channel limit?
 - better story for /etc/localtime.
 - still have spurious dmalloc free problems on file uploads.  weird.
 - byacc breaks everything due to unitialized memory, and used of
   xmalloc for C++ objects.
 - boot up OkD with apache running on 80.  problems with "ErrorDocInit"
 - cannot sth prepare after init...
 - auth tokens
 - debug load balancer class (load avg stuff)
 - fix RPCC autoconf stuff
 - bug in file upload -- hangs if channel limit exceeded.
 - clean up nasty pub global variables
 - bugs when logging reqs that are too big
 - bug: when a service crashes, and okd queues up connections, those 
   connections might be bad by the time the service comes back up.  in 
   this case, okd should not send failed connections, or the service should 
   not call fail if a bad file descriptor was received.
 - memory leak in DB proxies; clean up threads so that dmalloc reports
   are more informative.
 - simplify publishing protocol; right now, the repub commands breaks
   since it sends collections of include file, and therefore might 
   overrun a smaller maximum XDR packet size.
 - strip out EC stuff
 - fix bug where queued connections might abort and therefore cause a
   new child to freak out. remember, temporary fix is to not queue
   connections.
 - OK_MON rpc needed for proxies, to show Q len.
 - OK_MON rpc needed for services to show activity, like the apache
   server-status page.
 - write-up performance how-to
 - bug with including a file in itself.
 - pub command line jailing is mess up W.R.T. runtime jail.
 - fix servername/serveralabel mess
 - need a decompress function for zstr
 X debug and fix prepared statement handles on mysql. need to change
   the state machine so that it corresponds with the parsed query 
   state machine.
 - pub -w pukes on <?php ?> tags

Documentation
------------
- OKWS wiki?
- add OKWS results / pics to HTML web site
- add mention of /etc/sfslog.conf -> local3.info stuff

sfslite
-------
 - don't need sfsgroup/sfsuser

Show-Stoppers
-------------
 - when FDs don't make it, okd panics.
