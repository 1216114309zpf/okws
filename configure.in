dnl $Id$
dnl
dnl Process this file with autoconf to produce a configure script.
dnl

AC_INIT(config.h.in)
AM_INIT_AUTOMAKE(okws, 1.1pre1)
AM_CONFIG_HEADER(config.h)

AC_SUBST(PUB)

AC_CANONICAL_HOST

dnl Checks for programs.
AC_PROG_CC
AC_PROG_CPP
AC_PROG_CXX
AC_PROG_YACC
SFS_WFLAGS
SFS_PATH_CPP
AC_PROG_INSTALL_C
AC_PROG_LN_S
AC_PATH_PROG(PERL, perl, perl)
AC_PATH_PROGS(M4, gm4 gnum4 m4, '$(top_srcdir)/missing')
AC_PATH_PROGS(UPTIME, uptime, '$(top_srcdir)/missing')

dnl
dnl make sure that some type of threading is available.
dnl
dnl SFS_REQUIRE_THREADS

dnl
dnl Since only PTH works, for now just require PTH or nothing
dnl
SFS_FIND_PTH


test "$PUB" || PUB='$(top_builddir)/pub/pub'
test "$RPCC" || RPCC='/usr/local/bin/rpcc'
test "$TAME" || TAME='/usr/local/bin/tame'
dnl
dnl OKWS_TAG might set "with_sfs", so it should come before
dnl SFS_SFS, which will reset it if needs be
dnl
OKWS_TAG

# XXX - next line seems to be required for some autoconf/-make/libtool versions
test -z "$target" && target=NONE
AC_DISABLE_SHARED
AM_PROG_LIBTOOL
AM_PROG_LEX

AM_CONDITIONAL(STATIC, test "$enable_shared" != yes)


SFS_SFS
SFS_SET_CLOCK
SFS_FIND_RESOLV
OKWS_LIBS
SFS_MYSQL
OKWS_EXPAT

AM_CONDITIONAL(USE_MYSQL, test "${sfs_cv_libmysqlclient+set}")

if test -z "$okwslibdir"; then
   okwslibdirp='${pkglibdir}-${VERSION}'
   okwslibdir='${pkglibdir}-${VERSION}${okwstagdir}'
fi
if test -z "$okwsincludedir"; then
   okwsincludedirp='${pkgincludedir}-${VERSION}'
   okwsincludedir='${pkgincludedir}-${VERSION}${okwstagdir}'
fi
okwsexecdir="$okwslibdir"
CPPFLAG="$CPPFLAGS -DEXECDIR="'\"$(okwsexecdir)\"'

if test -z "$okwstag" -o "${okws_systembin+set}" = "set" ; then
	okwsbindir='${prefix}/bin'
else
	okwsbindir="$okwslibdir"
fi  
AC_SUBST(okwsincludedir)
AC_SUBST(okwsincludedirp)
AC_SUBST(okwslibdir)
AC_SUBST(okwsbindir)
AC_SUBST(okwslibdirp)
AC_SUBST(okwsexecdir)

SFS_CFLAGS

CPPFLAGS="$CPPFLAGS -I"'$(top_srcdir)'

dnl
dnl for .x files, need header in build directory
dnl
for lib in libpub libaok libweb libamysql; do
    CPPFLAGS="$CPPFLAGS -I"'$(top_builddir)'"/$lib"
done

dnl
dnl library directories
dnl
for lib in libpub libahttp libokxml libaok libamt libamysql libweb; do
    CPPFLAGS="$CPPFLAGS -I"'$(top_srcdir)'"/$lib"
done

dnl
dnl when compiling the PUB program, do not link againgst libahttp
dnl
LIBPUB='$(top_builddir)/libpub/libpub.la'
LIBAHTTP='$(top_builddir)/libahttp/libahttp.la'
LIBOKXML='$(top_builddir)/libokxml/libokxml.la'
LIBAOK='$(top_builddir)/libaok/libaok.la'
LIBAMT='$(top_builddir)/libamt/libamt.la'
LIBAMYSQL='$(top_builddir)/libamysql/libamysql.la'
LIBWEB='$(top_builddir)/libweb/libweb.la'
LDADD_PUB='$(LIBPUB) '"$LDADD"
LDADD='$(LIBWEB) $(LIBAOK) $(LIBOKXML) $(LIBAHTTP) $(LIBPUB) '"$LDADD"' $(LIBEXPAT)'
LDADD_AMT='$(LIBAMT) '"$LDADD"
if test "$enable_shared" = yes; then
   LDEPS=
   LDEPS_PUB=
   LDEPS_AMT=
else
   LDEPS_PUB='$(LIBPUB) '"$LDEPS"
   LDEPS='$(LIBWEB) $(LIBAOK) $(LIBOKXML) $(LIBAHTTP) $(LIBPUB) '"$LDEPS"
   LDEPS_AMT='$(LIBAMT) '"$LDEPS"
   LDEPS_AMYSQL='$(LIBAMT) $(LIBAMYSQL) '"$LDEPS"
fi
LDADD_AMYSQL='$(LIBAMT) $(LIBAMYSQL) '"$LDADD"' $(LDADD_THR) $(LDADD_MYSQL) '


dnl
dnl Where OKWS stores its files (except for those otherwise dumped
dnl in lib/ and include/)
dnl
OKWS_PREFIX

dnl
dnl Macros and variables for dealing with an OKWS 'Module'.
dnl An OKWS 'Module' is a bundle of services, libraries, and maybe
dnl DB-proxies or RPC servers.  In this case, we're just build a test
dnl module for out-of-the-box testing. In other cases, we might 
dnl be using this macro to build something useful.
dnl
OKWS_MODULE

dnl
dnl The OKWS prefix macro sets the module name to $PACKAGE, but
dnl we want to hardcode to 'test' in this case.
dnl
module_name='test'

ETAGS_ARGS='-C /dev/null'

OKWS_SET_VERSION

AC_SUBST(OK_VERSION)
AC_SUBST(OKWS_VERSION)
AC_SUBST(LIBPUB)
AC_SUBST(LIBAHTTP)
AC_SUBST(LIBOKXML)
AC_SUBST(LIBAOK)
AC_SUBST(LIBAMT)
AC_SUBST(LIBWEB)
AC_SUBST(LIBAMYSQL)
AC_SUBST(LDADD_PUB)
AC_SUBST(LDEPS_PUB)
AC_SUBST(LDADD_AMT)
AC_SUBST(LDADD_AMYSQL)
AC_SUBST(LDEPS_AMT)
AC_SUBST(LDEPS_AMYSQL)
AC_SUBST(ETAGS_ARGS)

PUB_PDEBUG
PUBFLAGS='-rF'
AC_SUBST(PUBFLAGS)

AC_OUTPUT(txarpcc/Makefile libpub/Makefile pub/Makefile 
	  okd/Makefile libahttp/Makefile libaok/Makefile  
	  libokxml/Makefile client/Makefile libamt/Makefile libamysql/Makefile 
	  libweb/Makefile logd/Makefile Makefile conf/Makefile
	  conf/freebsd/Makefile test/Makefile test/unit/Makefile
	  test/system/Makefile htdocs/Makefile contrib/Makefile)
