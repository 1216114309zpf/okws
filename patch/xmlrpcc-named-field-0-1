Index: xmlrpcc/genheader.C
===================================================================
--- xmlrpcc/genheader.C	(revision 5412)
+++ xmlrpcc/genheader.C	(working copy)
@@ -53,6 +53,8 @@
   pmshl_xml (id);
 }
 
+static const char *rpc_field = "const char *field = NULL";
+
 static str
 rpc_decltype (const rpc_decl *d)
 {
@@ -121,18 +123,25 @@
 
   aout << "\ntemplate<class T> "
        << (rs->decls.size () > 1 ? "" : "inline ") << "bool\n"
-       << "rpc_traverse (T &t, " << rs->id << " &obj)\n"
-       << "{\n";
+       << "rpc_traverse (T &t, " << rs->id << " &obj, " << rpc_field << ")\n"
+       << "{\n"
+       << "  bool ret = true;\n"
+       << "  rpc_enter_field (t, field);\n" ;
+
   const rpc_decl *rd = rs->decls.base ();
   if (rd < rs->decls.lim ()) {
-    aout << "  return rpc_traverse (t, obj." << (rd++)->id << ")";
-    while (rd < rs->decls.lim ())
-      aout << "\n    && rpc_traverse (t, obj." << (rd++)->id << ")";
+    aout << "  ret = rpc_traverse (t, obj." << rd->id 
+	 << ", \"" << rd->id << "\")";
+    rd++;
+    for ( ; rd < rs->decls.lim (); rd++ ) {
+      aout << "\n    && rpc_traverse (t, obj." << rd->id 
+	   << ", \"" << rd->id << "\")";
+    }
     aout << ";\n";
   }
-  else
-    aout << "  return true;\n";
-  aout << "}\n\n";
+  aout << "  rpc_exit_field (t, field);\n"
+       << "  return ret;\n"
+       << "}\n\n";
 
   dumpstruct_xml (s);
 }
@@ -183,7 +192,8 @@
   if (rt->tag.type == "void")
     aout << prefix << "return true;\n";
   else
-    aout << prefix << "return rpc_traverse (t, *obj." << rt->tag.id << ");\n";
+    aout << prefix << "return rpc_traverse (t, *obj." << rt->tag.id 
+	 << ", \"" << rt->tag.id << "\");\n";
 }
 
 static void
@@ -286,7 +296,7 @@
   aout << "};\n";
 
   aout << "\ntemplate<class T> bool\n"
-       << "rpc_traverse (T &t, " << rs->id << " &obj)\n"
+       << "rpc_traverse (T &t, " << rs->id << " &obj, " << rpc_field << ")\n"
        << "{\n"
        << "  " << rs->tagtype << " tag = obj." << rs->tagid << ";\n"
        << "  if (!rpc_traverse (t, tag))\n"
@@ -300,7 +310,8 @@
        << "  return false;\n"
        << "}\n"
        << "inline bool\n"
-       << "rpc_traverse (const stompcast_t &s, " << rs->id << " &obj)\n"
+       << "rpc_traverse (const stompcast_t &s, " << rs->id << " &obj, "
+       << rpc_field << ")\n"
        << "{\n"
        << "  rpcunion_switch_" << rs->id << "\n"
        << "    (obj." << rs->tagid << ", RPCUNION_REC_STOMPCAST,\n"
@@ -357,7 +368,7 @@
        << "TYPE2STRUCT( , " << rs->id << ");\n";
 
   aout << "\ntemplate<class T> inline bool\n"
-       << "rpc_traverse (T &t, " << rs->id << " &obj)\n"
+       << "rpc_traverse (T &t, " << rs->id << " &obj, " << rpc_field << ")\n"
        << "{\n"
        << "  u_int32_t val = obj;\n"
        << "  if (!rpc_traverse (t, val))\n"
