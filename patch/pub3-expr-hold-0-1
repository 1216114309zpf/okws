Index: libpub/pub3expr.C
===================================================================
--- libpub/pub3expr.C	(revision 5706)
+++ libpub/pub3expr.C	(working copy)
@@ -2360,9 +2360,31 @@
     if (x) { ret = x->to_regex_obj (); }
     return ret;
   }
-  //=====================================================================
+
+  //====================================== expr_hold_t ==================
+
+  expr_hold_t::expr_hold_t (ptr<void> data, str desc)
+    : m_data (data), m_desc (desc) {}
   
+  //--------------------------------------------------------------------
 
+  ptr<expr_hold_t> expr_hold_t::alloc (ptr<void> v, str d)
+  { return New refcounted<expr_hold_t> (v, d); }
+
+  //--------------------------------------------------------------------
+
+  str
+  expr_str_t::to_str (str_opt_t o) const 
+  {
+    strbuf b;
+    b << "pub3::expr_hold_t";
+    if (m_desc) {
+      b << "(" << m_desc << ")";
+    }
+    return m_desc;
+  }
+
+  //====================================================================
 };
 
 //=======================================================================
Index: libpub/pub3expr.h
===================================================================
--- libpub/pub3expr.h	(revision 5703)
+++ libpub/pub3expr.h	(working copy)
@@ -26,6 +26,7 @@
   class expr_assignment_t;
   class expr_dict_t;
   class expr_list_t;
+  class expr_hold_t;  // hold onto a C++ object in pub
   class bindtab_t;
   class bind_interface_t;
   class call_t;      // declared in pub3func.h
@@ -145,6 +146,8 @@
     virtual ptr<expr_dict_t> to_dict () { return NULL; }
     virtual ptr<const expr_list_t> to_list () const { return NULL; }
     virtual ptr<expr_list_t> to_list () { return NULL; }
+    virtual ptr<const expr_hold_t> to_hold () const { return NULL; }
+    virtual ptr<expr_hold_t> to_hold () { return NULL; }
 
     virtual str to_identifier () const { return NULL; }
     virtual str to_str (PUB3_TO_STR_ARG) const { return NULL; }
@@ -209,6 +212,8 @@
     ptr<const expr_dict_t> to_dict () const;
     ptr<expr_list_t> to_list ();
     ptr<const expr_list_t> to_list () const;
+    ptr<expr_hold_t> to_hold ();
+    ptr<const expr_list_t> to_hold () const;
     bool to_xdr (xpub3_expr_t *x) const;
     bool to_xdr (xpub3_json_t *x) const;
     bool is_static () const;
@@ -819,6 +824,25 @@
 
   //-----------------------------------------------------------------------
 
+  class expr_hold_t : public expr_t {
+  public:
+    expr_hold_t (ptr<void> data, str desc);
+    static ptr<expr_hold_t> alloc (ptr<void> v, str desc);
+    const char *get_obj_name () const { return "pub3::expr_hold_t"; }
+    str type_to_str () const { return "hold"; }
+    str to_str (PUB3_TO_STR_ARG) const;
+    bool to_bool () const;
+    scalar_obj_t to_scalar () const;
+    void v_dump (dumper_t *d) const;
+    ptr<const expr_hold_t> to_hold () const { return mkref (this); }
+    ptr<expr_hold_t> to_hold () { return mkref (this); }
+  private:
+    ptr<void> m_data;
+    str m_desc;
+  };
+
+  //-----------------------------------------------------------------------
+
   class expr_list_t : public expr_t, 
 		      public vec<ptr<expr_t> > {
   public:
